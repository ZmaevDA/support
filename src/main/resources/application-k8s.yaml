spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID}
            client-secret: ${KEYCLOAK_CLIENT_SECRET}
        provider:
          keycloak:
            issuer-uri: http://${KEYCLOAK_URI}:${KEYCLOAK_PORT}/realms/${KEYCLOAK_REALM_NAME}
            jwk-set-uri: http://${KEYCLOAK_URI}:${KEYCLOAK_PORT}/realms/${KEYCLOAK_REALM_NAME}/protocol/openid-connect/certs
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_URI}:${KEYCLOAK_PORT}/realms/${KEYCLOAK_REALM_NAME}

  rabbitmq:
    host: ${RABBITMQ_URI}
    port: ${RABBITMQ_PORT}
    username: admin
    password: admin
    virtual-host: cpp

    template:
      exchange:
        name: build_notifications
      queue:
        name: build_queue
      binding:
        routing-key: build_notifications_key

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

secret-key: ${HEADER_SECRET_KEY}
oAuth_security_schema: ${OAUTH_SECURITY_SCHEMA}
keycloak-auth-redirect: http://${KEYCLOAK_URI}:${KEYCLOAK_PORT}/realms/${KEYCLOAK_REALM_NAME}/protocol/openid-connect/auth
service-url: ${SERVICE_URI}

elasticsearch:
  host: ${ELASTICSEARCH_URI}

minio:
  accessKey: minioadmin
  secretKey: minioadmin
  url: http://localhost:9000
  inventoryItemBucketName: inventory-items

keycloak:
  auth-server-url: http://${KEYCLOAK_URI}:${KEYCLOAK_PORT}/auth
  server-url: http://${KEYCLOAK_URI}:${KEYCLOAK_PORT}
  realm: ${KEYCLOAK_REALM_NAME}
  resource: ${KEYCLOAK_CLIENT_ID}
  username: ${KEYCLOAK_ADMIN_USERNAME}
  password: ${KEYCLOAK_ADMIN_PASSWORD}
  client-secret: ${CLIENT_SECRET}