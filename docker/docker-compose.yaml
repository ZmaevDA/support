version: '3.1'
services:
  rabbit:
    container_name: rabbit
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - '5672:5672'
      - '15672:15672'
    deploy:
      resources:
        limits:
          memory: 256M
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq_logs:/var/log/rabbitmq

  support-db:
    image: postgres:14-alpine
    container_name: support-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: support-db
    ports:
      - '5432:5432'
    deploy:
      resources:
        limits:
          memory: 256M
    volumes:
      - postgres_data:/var/lib/postgresql/data

  keycloak-postgres:
    image: postgres:14-alpine
    container_name: keycloak-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - ${KC_POSTGRES_PORT_MAPPING:-5435}:5432
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - keycloak-network

  keycloak:
    image: custom-keycloak:latest
    container_name: keycloak
    environment:
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/postgres
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_DB_SCHEMA: public
      KC_FEATURES: import_export
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - '8282:8080'
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master" ]
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - keycloak-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: bind
        source: ./keycloak/import/realm-export.json
        target: /opt/keycloak/data/import/realm-export.json
        read_only: true

  minio:
    container_name: minio
    image: minio/minio:latest
    command: server --console-address ":9090" /data/
    ports:
      - "9000:9000"
      - "9090:9090"
    deploy:
      resources:
        limits:
          memory: 256M
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ~/minio/data:/data
    networks:
      - support-net

  odfe-node:
    image: elasticsearch:8.8.2
    container_name: odfe-node
    logging:
      driver: "json-file"
      options:
        max-size: "1000m"
        max-file: "10"
    environment:
      - discovery.type=single-node
      - node.name=odfe-node
      - discovery.seed_hosts=odfe-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - support-net

  kibana:
    image: kibana:8.8.2
    container_name: kibana
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    ports:
      - "5601:5601"
    deploy:
      resources:
        limits:
          memory: 1024M
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: http://odfe-node:9200
      ELASTICSEARCH_HOSTS: http://odfe-node:9200
    networks:
      - support-net

  logstash:
    user: root
    container_name: logstash
    image: bitnami/logstash
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    ports:
      - "5044:5044"
    deploy:
      resources:
        limits:
          memory: 256M
    depends_on:
      - support-db
      - odfe-node
    environment:
      - PIPELINE_WORKERS=1
      - PIPELINE_BATCH_SIZE=125
      - PIPELINE_BATCH_DELAY=50
      - DB_NAME=support_db
      - JDBC_USER=admin
      - JDBC_PASSWORD=admin
    volumes:
      - ./conf/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash_data:/usr/share/logstash/data
      - ./conf/postgresql-42.6.0.jar:/usr/share/logstash/postgresql-42.6.0.jar
    networks:
      - support-net

  lgtm:
    image: grafana/otel-lgtm
    ports:
      - '4317:4317'
      - '4318:4318'
      - '3000:3000'
    networks:
      - support-net

  support-service:
    image: 'zmamz/support-service:latest'
    ports:
      - "8081:8081"
    environment:
      OTEL_SERVICE_NAME: "support"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://lgtm:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_RESOURCE_ATTRIBUTES: service.name=coupon,service.instance.id=coupon,env=dev
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_METRIC_EXPORT_INTERVAL: 500
      OTEL_BSP_SCHEDULE_DELAY: 500
    depends_on:
      - support-db
      - lgtm
    networks:
      - support-net

volumes:
  postgres_data:
  rabbitmq_data:
  odfe_data:
  logstash:

networks:
  keycloak-network:
    driver: bridge
  support-net:
    driver: bridge
